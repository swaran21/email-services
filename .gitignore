# Dependency directories
# These directories are generated by package managers like npm or yarn.
# They can be re-created by running `npm install` or `yarn install`.
node_modules

# Compiled JavaScript, source maps, and type declarations
# This folder is generated by the TypeScript compiler ('npm run build').
# It's considered a build artifact, not source code.
dist/

# Log files
# Log files are generated during runtime and can grow very large.
# They should not be part of the version history.
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
# Temporary files or user-specific data.
pids
*.pid
*.seed
*.pid.lock

# Environment variables
# These files contain sensitive information like API keys, database passwords, etc.
# A `.env.example` file (which IS committed) should be used as a template.
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Test-related files
# Code coverage reports generated by testing frameworks like Jest.
coverage/
.jest-cache

# Editor and OS-specific files
# These are specific to a developer's local environment and should not be shared.

# macOS
.DS_Store

# Visual Studio Code
.vscode/*
# You can optionally un-ignore shared settings if your team agrees on them:
# !.vscode/settings.json
# !.vscode/extensions.json

# JetBrains IDEs (WebStorm, IntelliJ)
.idea/